Best Practices for Building Agents
When building AI agents, FOLLOW THESE GUIDELINES:

1. **Start from the goal, not the steps.**  
   Describe *what* the agent needs to achieve; let the agent decide *how*.

2. **Keep each tool lightweight & single-purpose.**  
   One clear input ➜ one clear output. No monolithic “do-everything” utilities.

3. **Expose only the essentials.**  
   Minimal parameters, sane defaults, short docs. Avoid long config lists.

4. **Avoid hard-coding sequences.**  
   Don’t chain calls inside a tool. The agent orchestrates; the tool just acts.

5. **Be composable.**  
   Design tools so they can be mixed and matched in novel ways.

6. **Stay technology-agnostic.**  
   Refer to interfaces (“REST endpoint”, “SQL query”, “filesystem read”) rather than naming specific libraries unless strictly required.

7. **Return machine-friendly responses.**  
   Prefer clean JSON or plain text over verbose prose. No UI mock-ups.

8. **Favor permissions over prescriptions.**  
   Offer capabilities (“can read S3 object”, “can post Slack message”) instead of step-by-step procedures.

9. **Document tersely.**  
   Three parts per tool: *name*, *purpose*, *signature*. Keep examples short.

10. **Assume agents self-monitor.**  
    Skip elaborate error-handling inside tools; surface raw errors so the agent can react.


# From Mastra 101:

A good system prompt is crucial as it defines your agent's purpose, capabilities, and behavioral guidelines. It's the foundation that shapes how your agent will interact with users.
A well-crafted system prompt should include:
Role definition: What the agent is and what it does
Core capabilities: What tasks the agent can perform
Behavioral guidelines: How the agent should respond and interact
Constraints: What the agent should not do or discuss
Success criteria: What makes the agent's responses good
The system prompt acts as a set of instructions that guide the agent's behavior. It helps the agent understand its purpose and how it should interact with users. A clear and comprehensive system prompt will result in more consistent and helpful agent responses.
This is a fundamental concept in AI agent development! The system prompt is like the "personality" and "job description" for your agent. It tells the AI model how to behave, what it can do, and how it should respond to users.